filter{
  grok {
    match => [ "message",
          "%{TIMESTAMP_ISO8601:log_timestamp} %{IPORHOST:site} %{WORD:method} %{URIPATH:page} %{NOTSPACE:querystring} %{NUMBER:port} %{NOTSPACE:username} %{IPORHOST:clienthost} %{NOTSPACE:useragent} %{NOTSPACE:referer} %{NUMBER:response} %{NUMBER:subresponse} %{NUMBER:scstatus} %{NUMBER:outbound:int} %{NUMBER:inbound:int} %{NUMBER:timetaken:int}"
    ] }
date{
  match => [ "log_timestamp", "YYYY-MM-dd HH:mm:ss"]
  timezone => "Etc/UTC"
  target => "@timestamp"
  }
}

filter{
  geoip {
    source => "clienthost"
  }
}

filter{

  mutate {
          remove_field => [ "[host]" ]
      }
      mutate {
          add_field => {
          "host" => "%{[beat][hostname]}"
          }
    }
}

filter{
  grok{
      match => {"page"=>["(?<fileName>(\w+\.)+\w+$)"]}
  }
}


filter{
        grok{
                match => {"fileName"=>["(?<fileType>\.[^.]*$)"]}
        }
}

filter{
  ruby{
      code => "event.set('download_MB', event.get('inbound') /(1024*1024) )"

  }
}

filter{
        ruby{
                  code => "event.set('upload_MB', event.get('outbound') /(1024*1024) )"

        }
}